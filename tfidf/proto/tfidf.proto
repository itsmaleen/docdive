syntax = "proto3";

package tfidf;

service TFIDFService {
  rpc CleanText (CleanTextRequest) returns (CleanTextResponse) {}
  rpc GetTopTerms (TopTermsRequest) returns (TopTermsResponse) {}
  rpc GetCoOccurrences (CoOccurrenceRequest) returns (CoOccurrenceResponse) {}
  rpc GetTermClusters (TermClustersRequest) returns (TermClustersResponse) {}
}

message CleanTextRequest {
  string text = 1;
}

message CleanTextResponse {
  string cleaned_text = 1;
}

message TopTermsRequest {
  repeated string documents = 1;
  int32 max_features = 2;
  int32 top_n = 3;
}

message TopTermsResponse {
  repeated DocumentTerms documents = 1;
}

message DocumentTerms {
  repeated string terms = 1;
}

message CoOccurrenceRequest {
  repeated string documents = 1;
  int32 window_size = 2;
  int32 top_n = 3;
}

message CoOccurrenceResponse {
  repeated TermPair pairs = 1;
}

message TermPair {
  string term1 = 1;
  string term2 = 2;
  int32 count = 3;
}

message TermClustersRequest {
  repeated string documents = 1;
  int32 n_clusters = 2;
}

message TermClustersResponse {
  map<int32, TermGroup> clusters = 1;
}

message TermGroup {
  repeated string terms = 1;
} 